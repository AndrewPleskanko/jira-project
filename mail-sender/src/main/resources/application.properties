# Email configuration
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.host=${MAIL_HOST}
spring.mail.port=${MAIL_PORT}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Elasticsearch configuration
elasticsearch.address=localhost:9200

# Kafka configuration
spring.kafka.bootstrap-servers=${KAFKA_ADDRESS}
spring.kafka.topic.email.service=user-deactivation
spring.kafka.consumer.group-id=group_id
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=\
  org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.value.default.type=com.example.mailsender.entity.EmailMessage
spring.kafka.consumer.properties.spring.json.trusted.packages=com.example.mailsender.*
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Server configuration
server.port=8084

# Spring Application Name
spring.application.name=mail-sender-service

# Configuration for resending failed emails
email.resend.after.ms=300000
email.max.resend.attempts=3

# Consul Discovery Configuration
spring.cloud.consul.host=localhost
spring.cloud.consul.port=8500
spring.cloud.consul.discovery.enabled=true
spring.cloud.consul.discovery.register=true
spring.cloud.consul.discovery.hostname=localhost
spring.cloud.consul.discovery.health-check-path=/actuator/health
spring.cloud.consul.discovery.health-check-interval=10s
spring.cloud.consul.discovery.health-check-critical-timeout=30s
spring.cloud.consul.discovery.prefer-ip-address=true
spring.cloud.consul.discovery.instance-id=${spring.application.name}-${server.port}